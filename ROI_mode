%Created: 2022-09-21
% 2022-09-23
function [ROI] = ROI_mode (mu_array, max_mu, mode_ind, step, addstep, noise)
% FNstr = 700nm-0.04
% max_mu = 245
% mode =    [0.036628, 0.036629]_com   [0.03663, 0.036631]_com   [0.036631, 0.036632]_com
% mode_ind =    309   313   315
%  [mode, mu_array, max_mu, mode_ind, c_array, C, multi]= modeIR4(XY)
% [modeL, modeR] = veeSet(mode),
%
%  mu_array = [ 1 2 3 4 3 1 3 4 5 4 3 1 1 2 1 ]
% max_mu  = 5
% mode_ind = 9
% step1=1, addstep=1, noise=1
%
% mu_array = [ 1 2 3 4 4 3  2 1 3 4 5 5 4 3 0 1 3 3 1 1 0]
% step1=1, addstep=1, noise=0
% max_mu  = 5
% mode_ind = [11 12]
%
% Set plot mode, 0 if no figure
DOPLOT = 0;
% DOPLOT = 1

% Left-Right elements of index array
inowL = min(mode_ind);
inowR = max(mode_ind);
% union mode array
ROInow = ROImode (mode_ind);

% %%%%%%%%%% PLOT INI
if DOPLOT
  ROI_mode_PLOT
     figname = strcat(dataname, 'Step=', num2str(step), 'nframe=',num2str( nframe ),'INI','.png')
print('-dpng', '-r300', figname)
end
% %%%%%%%%%% PLOT INI

% work copy of mu_array
mu_arraynow = mu_array;
% 2022-09-28
% check point ROI. all mu_array(ROInow) set 0
if length(ROInow) > 0 %1
  mu_arraynow (ROInow) = 0;
end
%
% max in mu_arraynow without ROI 
Lebesgue_lev = max(mu_arraynow);
% parameters now
add_noise = noise;
% Left-Rigth steps
stepL=step;
stepR=step;
% Left-Rigth boundaries now 
  inowL = inowL-stepL; if (inowL < 1) inowL = 1 end;
  inowR = inowR +stepR; if (inowR > numel(mu_array)) inowR = numel(mu_array) end;
  ROInow = inowL :inowR;
% max Left-Rigth  
  Lebesgue_lev = max(mu_arraynow(inowL), mu_arraynow(inowR));
% 2022-09-29
[aa, aa_ind] = find( mu_arraynow(ROInow ) == 0);
  ROInow (aa_ind) = [];
GOFW = 0;
% check point ROI
if Lebesgue_lev > 0
  % GO Forward
  GOFW = 1;
end
if DOPLOT
  ROI_mode_PLOT;
   figname = strcat(dataname, 'Step=', num2str(step), 'nframe=',num2str( nframe ),'1st','.png')
print('-dpng', '-r300', figname)
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
while GOFW
% check if   max(Left, Rigth) > max remain array
  GOFW =( (Lebesgue_lev + add_noise) > max(mu_arraynow) )
%%%%%%%%%%%%%%%%%%%%%%%% extend ROI
% check if 
if  mu_arraynow(inowL-1) < mu_arraynow(inowL) &  mu_arraynow(inowR+1) < mu_arraynow(inowR)
  inowL = inowL-stepL; if (inowL < 1) inowL = 1 end;
  inowR = inowR +stepR; if (inowR > numel(mu_array)) inowR = numel(mu_array) end;
  ROInow = inowL :inowR;
##  hnow = plot( ROInow, mu_array(ROInow), '-r');
##  plot(inowL, mu_array(inowL), 'sr');
##  plot(inowR, mu_array(inowR), 'sr');
##  set(hnow, 'linewidth', 1);
## % [] = find(mu_array == Lebesgue_lev)
##  ylim([  Lebesgue_lev-5  max_mu+5]);
##  xlim([inowL-5 inowR+5]);
else
  stepL=stepL+addstep;
  stepR=stepR+addstep;
  inowL = inowL-stepL; if (inowL < 1) inowL = 1 end;
  inowR = inowR +stepR; if (inowR > numel(mu_array)) inowR = numel(mu_array) end;
  ROInow = inowL :inowR;
##    hnow = plot( ROInow, mu_array(ROInow), '-r');
##    plot(inowL, mu_array(inowL), 'sr');
##    plot(inowR, mu_array(inowR), 'sr');
##    set(hnow, 'linewidth', 2);
##    ylim([  Lebesgue_lev-5  max_mu+5]);
##    xlim([inowL-5 inowR+5]);
% 2022-09-29
  stepL=stepL - addstep;
  stepR=stepR - addstep;
end
%%%%%%%%%%%%%%%%%%%%%% /extend ROI
  Lebesgue_lev = max(mu_arraynow(inowL), mu_arraynow(inowR));
  max(mu_arraynow);
  inowL;
  inowR;
% GOFW = inowL>1

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% remove zeros
[aa, aa_ind] = find(mu_arraynow(ROInow) ==0);
ROInow(aa_ind) = [];
%
ROI = ROInow;
% 2022-10-17
ROI = min(ROInow):max(ROInow);

endfunction
